library(ggplot2)
library(cshapes)
world <- cshp(date=as.Date("2008-1-1"))
world.points <- fortify(world, region='COWCODE')
p <- ggplot(world.points, aes(long,lat,group=group)) + geom_polygon()
p
library(ggplot2)
library(cshapes)
world <- cshp(date=as.Date("2008-1-1"))
world.points <- fortify(world, region='COWCODE')
p <- ggplot(world.points, aes(long,lat,group=group)) + geom_polygon()
p
map <- p
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- p
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- p
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- world
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- world
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- world.points
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- p
breach.dens = kde.points(pts,lims=map)
map <- p
breach.dens = kde.points(pts,lims=map)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
library(GISTools)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
theme_set(theme_bw())
library(sf)
library(maps)
library(ggplot2)
library(cshapes)
library(GISTools)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
theme_set(theme_bw())
library(sf)
library(ggplot2)
library(cshapes)
map <- p
breach.dens = kde.points(pts,lims=map)
data <- read.csv("raw_data.csv", sep=",")
df <- data.frame(data)
#remove unused columns
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
world <- cshp(date=as.Date("2008-1-1"))
world.points <- fortify(world, region='COWCODE')
p <- ggplot(world.points, aes(long,lat,group=group)) + geom_polygon()
map <- p
breach.dens = kde.points(pts,lims=map)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
library(raster)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
library(GISTools)
library(ggplot2)
library(rnaturalearth)
library(rnaturalearthdata)
library(ggplot2)
theme_set(theme_bw())
library(sf)
library(ggplot2)
library(cshapes)
library(raster)
#read data from csv
data <- read.csv("raw_data.csv", sep=",")
df <- data.frame(data)
#remove unused columns
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
world <- cshp(date=as.Date("2008-1-1"))
world.points <- fortify(world, region='COWCODE')
p <- ggplot(world.points, aes(long,lat,group=group)) + geom_polygon()
p
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
plot(pts)
map <- getMap()
map <- getMap()
map <- getMap()
library(GISTools)
library(ggplot2)
#read data from csv
data <- read.csv("raw_data.csv", sep=",")
df <- data.frame(data)
#remove unused columns
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
plot(pts)
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
library(GISTools)
#read data from csv
data <- read.csv("raw_data.csv", sep=",")
df <- data.frame(data)
#remove unused columns
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
library(GISTools)
#read data from csv
data <- read.csv("raw_data.csv", sep=",")
df <- data.frame(data)
#remove unused columns
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
map <- getMap()
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- GetMap()
map <- getMap(resolution = "coarse", projection = NA)
library(GISTools)
library(ggmap)
map <- getMap(resolution = "coarse", projection = NA)
map <- getMap()
map <- get_map()
map <- getMap()
library(ggplot2)
library(ggmap)
map <- getMap()
map <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
View(map)
map <- get_map(location = c(lon = mean(df$lon), lat = mean(df$lat)), zoom = 4,
maptype = "satellite", scale = 2)
map
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
map <- get_map()
library(rworldmap)
map <- getMap(resolution = "low")
map
breach.dens = kde.points(pts,lims=map)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
breach.dens = kde.points(pts,lims=map)
breach.dens = kde.points(pts,lims=NULL)
breach.dens = kde.points(sp,lims=NULL)
library(GISTools)
library(ggplot2)
library(ggmap)
#read data from csv
data <- read.csv("raw_data.csv", sep=",")
df <- data.frame(data)
#remove unused columns
keepColumns <- c("Lon3", "Lat3")
tidyData <- df[keepColumns]
#check utility of data in each row
tidyData <- tidyData[!is.na(tidyData$Lon3), ]
tidyData <- tidyData[!is.na(tidyData$Lat3), ]
pts <- tidyData
sp = SpatialPoints(pts)
library(rworldmap)
map <- getMap(resolution = "low")
breach.dens = kde.points(sp,lims=map)
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map); add.masking(masker)
# Plot census tract boundaries
plot(map,add=TRUE)
masker = poly.outer(breach.dens,map)
# Plot census tract boundaries
plot(map,add=TRUE)
breach.dens = kde.points(sp)
# Plot the result
level.plot(breach.dens)
# Block out the part outside the study area
masker = poly.outer(breach.dens,map)
# Plot census tract boundaries
plot(map,add=TRUE)
level.plot(breach.dens)
# Plot census tract boundaries
plot(map,add=TRUE)
breach.dens = kde.points(sp,lims=map)
# Plot the result
level.plot(breach.dens)
# Plot census tract boundaries
plot(map,add=TRUE)
